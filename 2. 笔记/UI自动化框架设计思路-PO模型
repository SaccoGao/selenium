1. 定义base层
用于寻找页面元素，相当于一个基础工具，返回webelement，供其他层调用。
实例见：UI_AutomatedTesting_Actual -> base

2. 定义util层
用于放置工具类的代码，如读取配置文件、获取验证码API、处理excel文件等
实例见：UI_AutomatedTesting_Actual -> util

3. 定义page层
通过使用base层获取元素的模块，获取具体页面具体元素的webelemium，返回给其他层调用
实例见：UI_AutomatedTesting_Actual -> page

4. 定义handle层
通过调用page层模块，对页面元素进行操作，如点击、输入、上传下载、获取元素文本等
实例见：UI_AutomatedTesting_Actual -> handle

5. 定义business层
通过调用handel层的模块方法，组合操作后得出结果，判断结果是否为预期，返回True或False
如：输入用户名、密码后点击登录后，判断是否跳转到首页，是返回True，否返回False
实例见：UI_AutomatedTesting_Actual -> business

6. 定义case层
编写具体case的地方，方法名则为case的标题
如：定义方法名test_lgoin_succees，证明此条case测试的是成功登录
那么就在business层，组合不同的操作，进行成功登录的操作（输入用户名 ->密码 -> 验证码 -> 点击登录 -> 判断是否登录成功）
随后更改business返回的结果，使用assert进行判断，case是否执行通过
实例见：UI_AutomatedTesting_Actual -> case

7. 说明
上述3-6点，需要区分页面（PO模型设计思想）
如：page层，定义为一个python包，下面有具体的模块，模块需要分页面，login_page(登录页面)、resgister_page(注册页面)等
其他层一致定义
分页面对元素进行获取、操作，分页面编写case